<?xml version="1.0" ?>

<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="App_Data\logs\nlogs.log"
      >
  <!--
   //如果有这个属性会抛出异常,放在根节点
   
  throwExceptions="true" internalLogFile="c:\nlog.txt" internalLogLevel="Debug"
 
-->

  <!-- 定义日志输出的根目录为web目录的上级目录 -->
  <variable name="logdir" value="${basedir}\..\..\..\..\logs"/>

  <!--定义日志的目标/输出-->
  <targets async="false">

    <default-target-parameters
        type="File"
        archiveAboveSize="50485760"
        maxArchiveFiles="50"
        archiveNumbering="Rolling"
        keepFileOpen="false"
        layout="${date:format=HH\:mm\:ss\:ffff}:[${level}][${logger}] ${callsite} ${onexception:${exception:format=tostring} ${newline}${stacktrace}${newline}"/>

    <!--屏幕彩色打印消息-->
    <target name="console" xsi:type="ColoredConsole"
                    layout="${date:format=HH\:mm\:ss\:ffff}:[${level}] ${message}"/>

    <!--保存至按类名命名的日志文件中 | ${level:uppercase=false:padding=-5} | -->
    <target name="classLog" xsi:type="File" maxArchiveFiles="30"
                    fileName="${logdir}\${date:format=yyyy_MM}\${date:format=yyyy_MM_dd}_${level}_${logger}.log"
                    layout="${date:format=HH\:mm\:ss\:ffff}: ${message} ${onexception:${exception:format=tostring} ${newline}${stacktrace}${newline}" />

    <target name="traceLog" xsi:type="File" maxArchiveFiles="30"
            fileName="${logdir}\${date:format=yyyy_MM}\${date:format=yyyy_MM_dd}_${level}.log"
            layout="${date:format=HH\:mm\:ss\:ffff}:[${level}][${logger}] ${message} ${onexception:${exception:format=tostring} ${newline}${stacktrace}${newline}" />

    <!-- 发送邮件   -->
    <!--<target name="email" xsi:type="Mail"
                header=""
                footer=""
                layout="${longdate}:[${level}] ${message} ${onexception:${exception:format=tostring} ${newline}${stacktrace}${newline}"
                html="false"
                addNewLines="true"
                subject="NLog日志-异常通知"
                to="dev@cszi.com"
                from="WatchDog&lt;swarmtask@163.com&gt;"
                body="${longdate}:[${level}] ${message} ${onexception:${exception:format=tostring} ${newline}${stacktrace}${newline}"
                smtpUserName="swarmtask@163.com"
                enableSsl="false"
                smtpPassword="zffkesxwogloijgm"
                smtpAuthentication="Basic"
                smtpServer="smtp.163.com"
                smtpPort="25" />-->

    <!-- 定义输出到MySQL中：
         type="Database"：这个记录方式是数据库
         dbProvider="MySql.Data.MySqlClient"：使用MySQL的连接方式
         connectionString="Server=XXX.XXX.XXX.XXX;Database=ProjectLogDB;Uid=XXX;Pwd=XXX;"：数据库的连接字符串
         commandText="insert into Logs(CreateDate,LogLevel,CallSite,Massage,StackTrace) values (@CreateDate,@LogLevel,@CallSite,@Massage,@StackTrace)"：insert语句
         <parameter name="CreateDate" layout="${longdate}" />对应到insert语句的参数的值
         ${callsite:className=True:fileName=True:includeSourcePath=True:methodName=True}
         -->
    <!--<target name="dblog" xsi:type="Database"  dbProvider="MySql.Data.MySqlClient"
                    connectionString="Server=127.0.0.1;port=3306;User=dev;Password=dev;Database=; Use Procedure Bodies=false;Charset=utf8;Allow Zero Datetime=True; Pooling=True; Max Pool Size=50;"
                    >
      <commandText>
        insert into SystemLog(CreateTime,Level,Logger,Message,Exception) values (@ct,@LogLevel,@Logger,@Message,@StackTrace)
      </commandText>
      <parameter name="ct" layout="${longdate}" />
      <parameter name="LogLevel" layout="${level}" />
      <parameter name="Logger" layout="${logger}" />
      <parameter name="Message" layout="${message}" />
      <parameter name="StackTrace" layout="${onexception:${exception:format=tostring} ${newline}${stacktrace}${newline}" />
    </target>-->


  </targets>

  <!--
  路由规则rule
  name - 记录者的名字 (允许使用通配符*)
  minlevel - 匹配日志范围的最低级别
  maxlevel - 匹配日志范围的最高级别
  level - 匹配的单一日志级别
  levels - 匹配的一系列日志级别，由逗号分隔。
  writeTo - 规则匹配时日志应该被写入的一系列目标，由逗号分隔。
  
  NOTE：Trace至Debug至一个单独的文件中
  Info一个单独的文件
  Warn开始，全部是独立的文件
  -->
  <rules>

    <logger name="*" minlevel="Trace" writeTo="console,traceLog" />
    <!-- 业务日志 -->
    <logger name="App.Biz.*" minlevel="Trace" writeTo="console,classLog" />
    <!--<logger name="*" minlevel="Trace" writeTo="dblog" />-->
    <!--<logger name="*" minlevel="Trace" writeTo="console,file,dblog" />-->
    <!--<logger name="*" minlevel="Warn" writeTo="email" />-->
  </rules>
</nlog>